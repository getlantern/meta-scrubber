name: Build and Test

on:
  - push
  - pull_request

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.18
    - name: Get test corpus ETag
      run: >-
        curl https://meta-scrubber-test-corpus.s3.us-west-1.amazonaws.com/exif-image-corpus.tar.gz
        -I | grep -Fi ETag | sed 's/ETag: //g' | tr -d '\r\n' > /tmp/exif-image-corpus-etag
    - name: Cache test corpus
      uses: actions/cache@v3
      with:
        path: |
          testdata/corpus
          testdata/corpus.etag
        key: exif-image-corpus-v2-{{ hashFiles("/tmp/exif-image-corpus-etag") }}
        restore-keys: exif-image-corpus-v2-{{ hashFiles("/tmp/exif-image-corpus-etag") }}
    - name: Download test corpus
      if: steps.cache-test-corpus.cache-hit != 'true'
      run: |
        curl https://meta-scrubber-test-corpus.s3.us-west-1.amazonaws.com/exif-image-corpus.tar.gz > /tmp/exif-image-corpus.tar.gz
        mkdir -p testdata/corpus
        tar -xzf /tmp/exif-image-corpus.tar.gz -C testdata/corpus
        cp /tmp/exif-image-corpus-etag testdata/corpus.etag
    - name: Run unit tests
      run: go test -race -v -failfast -coverprofile=profile.cov ./...
    - name: Install goveralls
      run: go install github.com/mattn/goveralls@latest
    - name: Send coverage
      env:
        COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: goveralls -coverprofile=profile.cov -service=github